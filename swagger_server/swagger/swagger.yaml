---
swagger: "2.0"
info:
  description: "Local password vault microservice"
  version: "1.0.0"
  title: "local password vault API"
  contact:
    email: "xavier@mayeur.be"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "lobo.local"
basePath: "/api"
tags:
- name: "admins"
  description: "Secured Admin-only calls"
- name: "users"
  description: "Operations available to regular users"
schemes:
- "https"
- "http"
paths:
  /admin:
    get:
      tags:
      - "admins"
      summary: "dump the database as a json object"
      description: "dump the database as a json object"
      operationId: "dump_db"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Database dumped"
          schema:
            $ref: "#/definitions/admin"
        400:
          description: "invalid dump"
      x-swagger-router-controller: "swagger_server.controllers.admins_controller"
    post:
      tags:
      - "admins"
      summary: "load set of IDs records from json object"
      description: "load set of IDs records from json object"
      operationId: "load_db"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "IdentityItems"
        description: "Collection of Identity items to add"
        required: false
        schema:
          type: "array"
          items:
            $ref: "#/definitions/id"
      responses:
        201:
          description: "Identity created"
        400:
          description: "invalid input, object invalid"
      x-swagger-router-controller: "swagger_server.controllers.admins_controller"
  /ID:
    get:
      tags:
      - "users"
      summary: "get an existing identity"
      description: "By passing a user ID tag, get the associated identity (username,\
        \ password)"
      operationId: "get_identity"
      produces:
      - "application/json"
      parameters:
      - name: "uid"
        in: "query"
        description: "user ID tag"
        required: true
        type: "string"
      responses:
        200:
          description: "user ID found, identity returned"
          schema:
            $ref: "#/definitions/id"
        400:
          description: "bad input parameter"
      x-swagger-router-controller: "swagger_server.controllers.users_controller"
    post:
      tags:
      - "users"
      summary: "Add a new identiy"
      description: "Adds an new ID tag & identity"
      operationId: "post_identity"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "IdentityItem"
        description: "Identity item to add"
        required: false
        schema:
          $ref: "#/definitions/id"
      responses:
        201:
          description: "Identity created"
        400:
          description: "invalid input, object invalid"
        409:
          description: "an existing item already exists"
      x-swagger-router-controller: "swagger_server.controllers.users_controller"
    put:
      tags:
      - "users"
      summary: "Update new identiy"
      description: "Update and existing ID tag & identity"
      operationId: "put_identity"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "IdentityItem"
        description: "Identity item to add"
        required: false
        schema:
          $ref: "#/definitions/id"
      responses:
        201:
          description: "Identity Updated"
        400:
          description: "invalid input, object invalid"
        409:
          description: "an existing item already exists"
      x-swagger-router-controller: "swagger_server.controllers.users_controller"
    delete:
      tags:
      - "users"
      summary: "Delete an existing identiy"
      description: "Delete ID tag & identity"
      operationId: "delete_identity"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "IdentityItem"
        description: "Identity item to add"
        required: false
        schema:
          $ref: "#/definitions/id"
      responses:
        201:
          description: "Identity succesfully deleted"
        400:
          description: "invalid input, object invalid"
      x-swagger-router-controller: "swagger_server.controllers.users_controller"
definitions:
  admin:
    type: "object"
    required:
    - "data"
    properties:
      data:
        type: "object"
        example: {}
        properties: {}
    example:
      data: {}
  id:
    type: "object"
    required:
    - "id"
    - "password"
    - "username"
    properties:
      id:
        type: "string"
        format: "text"
        example: "Gmail_mickey"
      username:
        type: "string"
        example: "Mickey Mouse"
      password:
        type: "string"
        format: "text"
        example: "Don't tell mother the baby sitter is dead"
    example:
      password: "Don't tell mother the baby sitter is dead"
      id: "Gmail_mickey"
      username: "Mickey Mouse"
